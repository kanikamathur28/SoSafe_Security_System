package installCode;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import javax.swing.*;

import scheduleObservingStrategies.*;
import scheduleObservingStrategies.Schedule.ScheduleBuilder;
import sensorFactory.*;
import systemSecurity.User;
import systems.MainSystem;
import controlPanel.*;
import systems.*;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author saurabh
 */
public class home extends javax.swing.JFrame {
	
	SensorFactory factory = new SensorFactory();
	MainSystem sys ;
	ScheduleBuilder builder = new ScheduleBuilder();
	Map<Integer, Sensor> motionSensorMap = new HashMap<Integer, Sensor>();
	Map<Integer, Sensor> tempSensorMap = new HashMap<Integer, Sensor>();
	String roomName;
	int roomId;

    /**
     * Creates new form home
     */
    public home(Customer.CustBuilder cust) {
    	this.cust = cust;
    	sys = new MainSystem("MySystem");
    	sys.setTeleNo(cust.getEmgrPhone1());
        initComponents();
        createBuilding();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void createBuilding(){
    	building = new Building(1);
    	 section1 = new Section(1);
    	 section2 = new Section(2);
    	 section1Room1 = new Room(1);
    	 section1Room2 = new Room(2);
    	 section1Room3 = new Room(3);
    	 section1Room4 = new Room(4);
    	 section2Room1 = new Room(5);
    	 section2Room2 = new Room(6);
    	 section2Room3 = new Room(7);
    	 section2Room4 = new Room(8);
    	 
    	 section1.add(section1Room1);
    	 section1.add(section1Room2);
    	 section1.add(section1Room3);
    	 section1.add(section1Room4);
    	 
    	 section2.add(section2Room1);
    	 section2.add(section2Room2);
    	 section2.add(section2Room3);
    	 section2.add(section2Room4);
    	 
    	 building.add(section1);
    	 building.add(section2);
    	
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        bldgPanel = new javax.swing.JPanel();
        sec1Panel = new javax.swing.JPanel();
        sec1Room1 = new javax.swing.JPanel();
        Room1 = new javax.swing.JLabel();
        sec1Room2 = new javax.swing.JPanel();
        Room2 = new javax.swing.JLabel();
        sec1Room3 = new javax.swing.JPanel();
        Room3 = new javax.swing.JLabel();
        sec1Room4 = new javax.swing.JPanel();
        Room4 = new javax.swing.JLabel();
        sec2Panel = new javax.swing.JPanel();
        sec2Room1 = new javax.swing.JPanel();
        Room1B = new javax.swing.JLabel();
        sec2Room2 = new javax.swing.JPanel();
        Room2B = new javax.swing.JLabel();
        sec2Room3 = new javax.swing.JPanel();
        Room3B = new javax.swing.JLabel();
        sec2Room4 = new javax.swing.JPanel();
        Room4B = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        selPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        sec1SafetyChk = new javax.swing.JCheckBox();
        secAAlarmChk = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        sec2SafetyChk = new javax.swing.JCheckBox();
        sec2AlarmChk = new javax.swing.JCheckBox();
        submit = new java.awt.Button();
        iconImg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("So Safe Security System - Home");
        setLocation(new java.awt.Point(150, 22));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        bldgPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Building Layout", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        bldgPanel.setLayout(new java.awt.GridLayout(1, 0));
        bldgPanel.setBackground(new Color(152, 175, 199));

        sec1Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Section A"));
        sec1Panel.setLayout(new java.awt.GridLayout(2, 2));
        
        sec1Panel.setBackground(new java.awt.Color(153, 153, 153));
        sec2Panel.setBackground(new java.awt.Color(153, 153, 153));

        sec1Room1.setBorder(javax.swing.BorderFactory.createTitledBorder("Room 1"));

        javax.swing.GroupLayout secARoom1Layout = new javax.swing.GroupLayout(sec1Room1);
        sec1Room1.setLayout(secARoom1Layout);
        secARoom1Layout.setHorizontalGroup(
            secARoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secARoom1Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(Room1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        secARoom1Layout.setVerticalGroup(
            secARoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secARoom1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(Room1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sec1Panel.add(sec1Room1);

        sec1Room2.setBorder(javax.swing.BorderFactory.createTitledBorder("Room 2"));

        javax.swing.GroupLayout secARoom2Layout = new javax.swing.GroupLayout(sec1Room2);
        sec1Room2.setLayout(secARoom2Layout);
        secARoom2Layout.setHorizontalGroup(
            secARoom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secARoom2Layout.createSequentialGroup()
            		.addContainerGap(57, Short.MAX_VALUE)
                .addComponent(Room2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        secARoom2Layout.setVerticalGroup(
            secARoom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secARoom2Layout.createSequentialGroup()
            		.addContainerGap(31, Short.MAX_VALUE)
                .addComponent(Room2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sec1Panel.add(sec1Room2);

        sec1Room3.setBorder(javax.swing.BorderFactory.createTitledBorder("Room 3"));

        javax.swing.GroupLayout secARoom3Layout = new javax.swing.GroupLayout(sec1Room3);
        sec1Room3.setLayout(secARoom3Layout);
        secARoom3Layout.setHorizontalGroup(
            secARoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secARoom3Layout.createSequentialGroup()
            		.addContainerGap(57, Short.MAX_VALUE)
                .addComponent(Room3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        secARoom3Layout.setVerticalGroup(
            secARoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secARoom3Layout.createSequentialGroup()
            		.addContainerGap(31, Short.MAX_VALUE)
                .addComponent(Room3,javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sec1Panel.add(sec1Room3);

        sec1Room4.setBorder(javax.swing.BorderFactory.createTitledBorder("Room 4"));

        javax.swing.GroupLayout secARoom4Layout = new javax.swing.GroupLayout(sec1Room4);
        sec1Room4.setLayout(secARoom4Layout);
        secARoom4Layout.setHorizontalGroup(
            secARoom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secARoom4Layout.createSequentialGroup()
            		.addContainerGap(57, Short.MAX_VALUE)
                .addComponent(Room4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        secARoom4Layout.setVerticalGroup(
            secARoom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secARoom4Layout.createSequentialGroup()
            		.addContainerGap(31, Short.MAX_VALUE)
                .addComponent(Room4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sec1Panel.add(sec1Room4);

        bldgPanel.add(sec1Panel);

        sec2Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Section B"));
        sec2Panel.setLayout(new java.awt.GridLayout(2, 2));

        sec2Room1.setBorder(javax.swing.BorderFactory.createTitledBorder("Room 1"));

        javax.swing.GroupLayout secBRoom1Layout = new javax.swing.GroupLayout(sec2Room1);
        sec2Room1.setLayout(secBRoom1Layout);
        secBRoom1Layout.setHorizontalGroup(
            secBRoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secBRoom1Layout.createSequentialGroup()
            		.addContainerGap(57, Short.MAX_VALUE)
                .addComponent(Room1B, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        secBRoom1Layout.setVerticalGroup(
            secBRoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secBRoom1Layout.createSequentialGroup()
            		.addContainerGap(31, Short.MAX_VALUE)
                .addComponent(Room1B, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sec2Panel.add(sec2Room1);

        sec2Room2.setBorder(javax.swing.BorderFactory.createTitledBorder("Room 2"));

        javax.swing.GroupLayout secBRoom2Layout = new javax.swing.GroupLayout(sec2Room2);
        sec2Room2.setLayout(secBRoom2Layout);
        secBRoom2Layout.setHorizontalGroup(
            secBRoom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secBRoom2Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(Room2B, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        secBRoom2Layout.setVerticalGroup(
            secBRoom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secBRoom2Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(Room2B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        sec2Panel.add(sec2Room2);

        sec2Room3.setBorder(javax.swing.BorderFactory.createTitledBorder("Room 3"));

        javax.swing.GroupLayout secBRoom3Layout = new javax.swing.GroupLayout(sec2Room3);
        sec2Room3.setLayout(secBRoom3Layout);
        secBRoom3Layout.setHorizontalGroup(
            secBRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secBRoom3Layout.createSequentialGroup()
            		.addContainerGap(57, Short.MAX_VALUE)
                .addComponent(Room3B, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        secBRoom3Layout.setVerticalGroup(
            secBRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secBRoom3Layout.createSequentialGroup()
            		.addContainerGap(31, Short.MAX_VALUE)
                .addComponent(Room3B, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sec2Panel.add(sec2Room3);

        sec2Room4.setBorder(javax.swing.BorderFactory.createTitledBorder("Room 4"));

        javax.swing.GroupLayout secBRoom4Layout = new javax.swing.GroupLayout(sec2Room4);
        sec2Room4.setLayout(secBRoom4Layout);
        secBRoom4Layout.setHorizontalGroup(
            secBRoom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secBRoom4Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(Room4B, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        secBRoom4Layout.setVerticalGroup(
            secBRoom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secBRoom4Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(Room4B, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        sec2Panel.add(sec2Room4);

        bldgPanel.add(sec2Panel);

        jLabel1.setFont(new java.awt.Font("PT Sans Caption", 3, 24)); // NOI18N
        jLabel1.setText("So Safe Security System");

        selPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Alarms", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Lucida Grande", 0, 14))); // NOI18N
        selPanel.setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Section A"));

        sec1SafetyChk.setText("Safety Alarm");
        sec1SafetyChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secASafetyChkActionPerformed(evt);
            }
        });

        secAAlarmChk.setText("FIre Alarm");
        secAAlarmChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secAAlarmChkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(secAAlarmChk)
                    .addComponent(sec1SafetyChk))
                .addContainerGap(262, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(sec1SafetyChk)
                .addGap(18, 18, 18)
                .addComponent(secAAlarmChk)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        selPanel.add(jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Section B"));

        sec2SafetyChk.setText("Safety Alarm");
        sec2SafetyChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secBSafetyChkActionPerformed(evt);
            }
        });

        sec2AlarmChk.setText("Fire Alarm");
        sec2AlarmChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secBAlarmChkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sec2AlarmChk)
                    .addComponent(sec2SafetyChk))
                .addContainerGap(264, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(sec2SafetyChk)
                .addGap(18, 18, 18)
                .addComponent(sec2AlarmChk)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        selPanel.add(jPanel2);

        submit.setLabel("Install & Generate Bill");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        //iconImg.setIcon(new javax.swing.ImageIcon("/Users/saurabh/Desktop/home.png")); // NOI18N
        iconImg.setIcon(new javax.swing.ImageIcon("home.png")); // NOI18N
        iconImg.setPreferredSize(getMaximumSize());

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                //.addContainerGap()
                //.addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    //.addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    //.addComponent(selPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)))
            		.addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            		.addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(topPanelLayout.createSequentialGroup()
                    		.addContainerGap()
                    		.addComponent(bldgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE))
                    		.addGroup(topPanelLayout.createSequentialGroup()
                    		.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    		.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(iconImg, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(topPanelLayout.createSequentialGroup()
                        		.addContainerGap()
                        		.addComponent(selPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)))		
                        		.addGap(4,4,4))
                        		.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                        		.addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        		.addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                		.addComponent(jLabel1)
                		.addGroup(topPanelLayout.createSequentialGroup()
                				.addGap(1,1,1)
                				.addComponent(iconImg, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bldgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(topPanel);

        pack();
    }// </editor-fold>                        

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    	 ArrayList<Sensor> fireList =  new ArrayList<Sensor>();
    	 ArrayList<Sensor> safetyList =  new ArrayList<Sensor>(); 
    	 List<BldgComponent> secARoomList;
    	 List<BldgComponent> secBRoomList;
    	 secARoomList = section1.getList();
    	 secBRoomList = section2.getList();

    	 if(sec1SafetyChk.isSelected()){
    		 for(int i=0; i<secARoomList.size(); i++){
    			 BldgComponent room = secARoomList.get(i);
    			 room.setSecurityAlarm();
    			 roomName = secARoomList.get(i).getName();
    			 roomId = secARoomList.get(i).getID();
    			 Sensor sensor = factory.createSensor(SysConstants.MOTION_SENSOR, roomId, roomName);
    			 room.addMotionSensor((MotionSensor) sensor);
    		 }
    	 }
    	 if(sec2SafetyChk.isSelected()){
    		 for(int i=0; i<secBRoomList.size(); i++){
    			 BldgComponent room = secBRoomList.get(i);
    			 room.setSecurityAlarm();
    			 roomName = secBRoomList.get(i).getName();
    			 roomId = secBRoomList.get(i).getID();
    			 Sensor sensor = factory.createSensor(SysConstants.MOTION_SENSOR, roomId, roomName);
    			 room.addMotionSensor((MotionSensor) sensor);
    		 }
    	 }
    	 if(secAAlarmChk.isSelected()){
    		 for(int i=0; i<secARoomList.size(); i++){
    			 BldgComponent room = secARoomList.get(i);
    			 room.setFireAlarm();
    			 roomName = secARoomList.get(i).getName();
    			 roomId = secARoomList.get(i).getID();
    			 Sensor sensor = factory.createSensor(SysConstants.TEMP_SENSOR, roomId, roomName);
    			 room.addTempSensor((TempSensor) sensor);
    		 }
    	 }
    	 if(sec2AlarmChk.isSelected()){
    		 for(int i=0; i<secBRoomList.size(); i++){
    			 BldgComponent room = secBRoomList.get(i);
    			 room.setFireAlarm();
    			 roomName = secBRoomList.get(i).getName();
    			 roomId = secBRoomList.get(i).getID();
    			 Sensor sensor = factory.createSensor(SysConstants.TEMP_SENSOR, roomId, roomName);
    			 room.addTempSensor((TempSensor) sensor);
    		 }
    	 }
    	 for(int i=0; i<secARoomList.size(); i++){
    		 if(secARoomList.get(i).getSecurityAlarm()){
    			 BldgComponent room = secARoomList.get(i);
    			 Sensor sensor = room.getMotionSensor();
    			 safetyList.add(sensor);
    		 	 sys.addtoInstalledSensorList(sensor); 
    		 	 motionSensorMap.put(room.getID(), sensor);
    		 }
    	 }
    	 for(int i=0; i<secBRoomList.size(); i++){
    		 if(secBRoomList.get(i).getSecurityAlarm()){
    			 BldgComponent room = secBRoomList.get(i);
    			 Sensor sensor = room.getMotionSensor();
    			 safetyList.add(sensor);
    		 	 sys.addtoInstalledSensorList(sensor); 
    		 	 motionSensorMap.put(room.getID(), sensor);
    		 }
    	 }
    	 for(int i=0; i<secARoomList.size(); i++){
    		 if(secARoomList.get(i).getFireAlarm()){
    			 BldgComponent room = secARoomList.get(i);
    			 Sensor sensor = room.getTempSensor();
    			 fireList.add(sensor);
    		 	 sys.addtoInstalledSensorList(sensor); 
    		 	 tempSensorMap.put(room.getID(), sensor);
    		 }
    	 }
    	 for(int i=0; i<secBRoomList.size(); i++){
    		 if(secBRoomList.get(i).getFireAlarm()){
    			 BldgComponent room = secBRoomList.get(i);
    			 Sensor sensor = room.getTempSensor();
    			 fireList.add(sensor);
    		 	 sys.addtoInstalledSensorList(sensor); 
    		 	 tempSensorMap.put(room.getID(), sensor);
    		 }
    	}
    	/* System.out.println("Fire Alarm Room List");
    	 for(int i=0;i<fireList.size();i++)
    		 System.out.println(fireList.get(i));
    	 
    	 System.out.println("Security Alarm Room List");
    	 for(int i=0;i<safetyList.size();i++)
    		 System.out.println(safetyList.get(i));*/
    try{	 
    	writer = new PrintWriter("roomselect.txt", "UTF-8");
    	for(int i=0; i<safetyList.size();i++)
    	{
    		writer.print(safetyList.get(i).getSensorID()+";");
    		//writer.println("\n");
    	
    	}
    	writer.println("\n");
    	for(int j=0; j<fireList.size();j++)
    	{
    		writer.print(fireList.get(j).getSensorID()+";");
    		//writer.println("\n");
    	
    	}
    	writer.close();
    	
    	
    	 
    }catch (Exception e) {
        e.printStackTrace();

    		}
    BillTemplate fireBill = new FireBill();
	fireBill.setCustomer(cust);
	fireBill.setLayout(fireList);
	fireBill.genBill();
	
	BillTemplate secBill = new SecurityBill();
	secBill.setCustomer(cust);
	secBill.setLayout(safetyList);
	secBill.genBill();
	
	dispose();
	
	 	WeekDayActStrategyObserver weekAct = new WeekDayActStrategyObserver(sys);
	    weekAct.start();
	    
	    WeekEndActStrategyObserver endAct = new WeekEndActStrategyObserver(sys);
	    endAct.start();
	    
	    AllDaysActStrategyObserver dayAct = new AllDaysActStrategyObserver(sys);
	    dayAct.start();
		
	    WeekDayDeactStrategyObserver weekDeact = new WeekDayDeactStrategyObserver(sys);
	    weekDeact.start();
	    
	    WeekendDeactStrategyObserver endDeact = new WeekendDeactStrategyObserver(sys);
	    endDeact.start();
	    
	    AllDaysDeactStrategyObserver dayDeact = new AllDaysDeactStrategyObserver(sys);
	    dayDeact.start();
	    
	    createAdminUser();
	
	SysConfigPanel configPanel = new SysConfigPanel(tempSensorMap, motionSensorMap, builder, sys, 
									secARoomList, secBRoomList);
    configPanel.setLocationRelativeTo(null);
	configPanel.setVisible(true);
    } 
    
    

    private void secASafetyChkActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if(sec1SafetyChk.isSelected())
        {
        sec1Room1.setBackground(Color.GREEN);
        sec1Room2.setBackground(Color.GREEN);
        sec1Room3.setBackground(Color.GREEN);
        sec1Room4.setBackground(Color.GREEN);
        }
        else{
        	sec1Room1.setBackground(UIManager.getColor ( "Panel.background" ));
            sec1Room2.setBackground(UIManager.getColor ( "Panel.background" ));
            sec1Room3.setBackground(UIManager.getColor ( "Panel.background" ));
            sec1Room4.setBackground(UIManager.getColor ( "Panel.background" ));
        }
        
       
        
                // TODO add your handling code here:
    }                                             

     private void secBSafetyChkActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if(sec2SafetyChk.isSelected())
        {
        sec2Room1.setBackground(Color.GREEN);
        sec2Room2.setBackground(Color.GREEN);
        sec2Room3.setBackground(Color.GREEN);
        sec2Room4.setBackground(Color.GREEN);
        }
        else{
        	sec2Room1.setBackground(UIManager.getColor ( "Panel.background" ));
            sec2Room2.setBackground(UIManager.getColor ( "Panel.background" ));
            sec2Room3.setBackground(UIManager.getColor ( "Panel.background" ));
            sec2Room4.setBackground(UIManager.getColor ( "Panel.background" ));
        }
        
       
        
                // TODO add your handling code here:
    }  
     
     private void secAAlarmChkActionPerformed(java.awt.event.ActionEvent evt) {                                             
         // TODO add your handling code here:
    	    icon = new ImageIcon ("fire.png");
    	    if(secAAlarmChk.isSelected()){
    	    	Room1.setIcon(icon);
    	    	Room2.setIcon(icon);
    	    	Room3.setIcon(icon);
    	    	Room4.setIcon(icon);
    	    	
    	    	Room1.setVisible(true);
    	    	Room2.setVisible(true);
    	    	Room3.setVisible(true);
    	    	Room4.setVisible(true);
    	    }
    	    	
    	    else {
    	    	Room1.setVisible(false);
    	    	Room2.setVisible(false);
    	    	Room3.setVisible(false);
    	    	Room4.setVisible(false);
    	    }
     } 
     
     private void createAdminUser(){
    	 try {
             Scanner read = new Scanner (new File("customerInfo.txt"));
             
             read.useDelimiter(";");
             String username = "", password = "";
             boolean login = false;
             while(read.hasNext()){
                 username = read.next().trim();
                 password = read.next().trim();
             }
             User newUser = new User(username, password);
             sys.addToUserList(username, newUser);
             
         } catch (FileNotFoundException ex) {
             ex.printStackTrace();
         }
     }

    private void secBAlarmChkActionPerformed(java.awt.event.ActionEvent evt) {  
    	icon = new ImageIcon ("fire.png");
	    if(sec2AlarmChk.isSelected()){
	    	Room1B.setIcon(icon);
	    	Room2B.setIcon(icon);
	    	Room3B.setIcon(icon);
	    	Room4B.setIcon(icon);
	    	
	    	Room1B.setVisible(true);
	    	Room2B.setVisible(true);
	    	Room3B.setVisible(true);
	    	Room4B.setVisible(true);
	    }
	    	
	    else {
	    	Room1B.setVisible(false);
	    	Room2B.setVisible(false);
	    	Room3B.setVisible(false);
	    	Room4B.setVisible(false);
	    }
        // TODO add your handling code here:
    }                                            
                     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	//this.cust = cust;
                //new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel Room1;
    private javax.swing.JLabel Room1B;
    private javax.swing.JLabel Room2;
    private javax.swing.JLabel Room2B;
    private javax.swing.JLabel Room3;
    private javax.swing.JLabel Room3B;
    private javax.swing.JLabel Room4;
    private javax.swing.JLabel Room4B;
    private javax.swing.JPanel bldgPanel;
    private javax.swing.JLabel iconImg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox secAAlarmChk;
    private javax.swing.JPanel sec1Panel;
    private javax.swing.JPanel sec1Room1;
    private javax.swing.JPanel sec1Room2;
    private javax.swing.JPanel sec1Room3;
    private javax.swing.JPanel sec1Room4;
    private javax.swing.JCheckBox sec1SafetyChk;
    private javax.swing.JCheckBox sec2AlarmChk;
    private javax.swing.JPanel sec2Panel;
    private javax.swing.JPanel sec2Room1;
    private javax.swing.JPanel sec2Room2;
    private javax.swing.JPanel sec2Room3;
    private javax.swing.JPanel sec2Room4;
    private javax.swing.JCheckBox sec2SafetyChk;
    private javax.swing.JPanel selPanel;
    private java.awt.Button submit;
    private JPanel topPanel;
    private javax.swing.ImageIcon icon;
    BldgComponent building ;
	BldgComponent section1 ;
	BldgComponent section2 ;
	BldgComponent section1Room1 ;
	BldgComponent section1Room2 ;
	BldgComponent section1Room3 ;
	BldgComponent section1Room4 ;
	BldgComponent section2Room1 ;
	BldgComponent section2Room2 ;
	BldgComponent section2Room3 ;
	BldgComponent section2Room4 ;
	PrintWriter writer;
	Customer.CustBuilder cust;
    // End of variables declaration                   
}


